<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<ResourceDictionary.ThemeDictionaries>

		<!-- Light Theme -->
		<ResourceDictionary x:Key="Light">
			<Color x:Key="Color01">Black	</Color>
		</ResourceDictionary>

		<!-- Dark Theme -->
		<ResourceDictionary x:Key="Dark">
			<Color x:Key="Color01">White</Color>
		</ResourceDictionary>
		
	</ResourceDictionary.ThemeDictionaries>

	<!-- 
		note: beside theme color overrides, any resource referencing material colors
		SHOULD NOT be declared in a ResourceDictionary imported directly from App.xaml.
		Since they will be loaded before material color palette, and have a transparent color instead.

		ex: <SolidColorBrush x:Key="..." Color="{ThemeResource Material...}" />
	-->

	<SolidColorBrush x:Key="Color01Brush"
					 Color="{ThemeResource Color01}" />

	<SolidColorBrush x:Key="DividerBrush"
					 Color="{ThemeResource MaterialOnSurfaceColor}"
					 Opacity="0.13" />

	<SolidColorBrush x:Key="SampleSecondBackgroundBrush"
					 Color="{ThemeResource MaterialOnSurfaceColor}"
					 Opacity="0.05" />

	<SolidColorBrush x:Key="ApplicationPageBackgroundThemeBrush"
					 Color="{ThemeResource MaterialBackgroundColor}" />

	<Color x:Key="UnoBlueColor">#FF229DFC</Color>
	<Color x:Key="UnoPurpleColor">#FF7A69F5</Color>
	<Color x:Key="UnoGreenColor">#FF6CE5AE</Color>
	<Color x:Key="UnoRedColor">#FFF65678</Color>

	<SolidColorBrush x:Key="UnoBlueColorBrush"
					 Color="{StaticResource UnoBlueColor}" />

	<SolidColorBrush x:Key="UnoPurpleColorBrush"
					 Color="{StaticResource UnoPurpleColor}" />

	<SolidColorBrush x:Key="UnoGreenColorBrush"
					 Color="{StaticResource UnoGreenColor}" />

	<SolidColorBrush x:Key="UnoRedColorBrush"
					 Color="{StaticResource UnoRedColor}" />
	
</ResourceDictionary>